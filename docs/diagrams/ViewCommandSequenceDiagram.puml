@startuml ViewCommandSequenceDiagram

actor User
participant ":BusyBreak" as BusyBreak
participant ":View" as View
participant ":Ui" as Ui
participant "activity:\nActivity" as Activity

User -> BusyBreak: view <YYYY-MM-DD>
activate BusyBreak

BusyBreak -> View: viewInput(userInputArray)
activate View

alt invalid format (args.length != 2)
    View -> Ui: showInvalidViewFormat()
    Ui --> User: "Invalid command format"
    View --> BusyBreak
    deactivate View
    BusyBreak --> User
    deactivate BusyBreak
    return
else valid format
    View -> View: validate date (YYYY-MM-DD)
    alt invalid date
        View -> Ui: showInvalidDate(date)
        Ui --> User: "Invalid date"
        View --> BusyBreak
        deactivate View
        BusyBreak --> User
        deactivate BusyBreak
        return
    else valid date
        View -> BusyBreak: list.isEmpty()
        activate BusyBreak
        BusyBreak --> View: boolean
        deactivate BusyBreak

        alt itinerary is empty
            View -> Ui: showEmptyItinerary()
            Ui --> User: "Itinerary is Empty!"
        else itinerary not empty
            View -> View: filter by date -> matches

            loop for each index from 0 to list.size()-1
                View -> BusyBreak: list.get(index)
                activate BusyBreak
                BusyBreak --> View: activity
                deactivate BusyBreak

                View -> Activity: getDate()
                activate Activity
                Activity --> View: date
                deactivate Activity

                View -> View: if date == inputDate then add to matches
            end

            alt no matches
                View -> Ui: showNoActivitiesFor(date)
                Ui --> User: "No activities found"
            else matches found
                View -> Ui: showItineraryFor(date, matches)
                activate Ui

                loop for each activity in matches
                    Ui -> Activity: getDate()
                    activate Activity
                    Activity --> Ui: date
                    deactivate Activity

                    Ui -> Activity: getTime()
                    activate Activity
                    Activity --> Ui: time
                    deactivate Activity

                    Ui -> Activity: getDescription()
                    activate Activity
                    Activity --> Ui: description
                    deactivate Activity

                    Ui -> Activity: getCost()
                    activate Activity
                    Activity --> Ui: cost
                    deactivate Activity

                    Ui --> User: Display activity details
                    Ui -> Ui: showLine()
                end

                deactivate Ui
            end
        end
    end
end

View --> BusyBreak
deactivate View

BusyBreak --> User
deactivate BusyBreak

@enduml
